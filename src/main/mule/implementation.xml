<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="getHotelByHotelIdFlow" doc:id="25c6ca27-c141-4fbf-bb79-d801dada5fc7" >
		<db:select doc:name="selectHotelAndAddress" doc:id="7447e886-94e5-449a-a2ca-29ef82a4c7da" config-ref="db-postgresqlConfig" target="hotel">
			<db:sql ><![CDATA[select h.*,ha.city ha_city,ha.code ha_code,ha.state ha_state 
from hotel_address ha, hotels h 
where ha.hotel_id = h.hotel_id and ha.hotel_id = :hotel_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[output application/java
---
{
	hotel_id: upper(payload.body.getHotelByHotelId.hotelId)
}]]]></db:input-parameters>
		</db:select>
		<db:select doc:name="selectRoomCategory" doc:id="9b3c2be9-5974-4536-804c-67e10889620f" config-ref="db-postgresqlConfig">
			<db:sql ><![CDATA[select * from hotel_room_category where hotel_id = :hotel_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[output application/java
---
{
	hotel_id: upper(payload.body.getHotelByHotelId.hotelId)
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="00b80367-3aae-4928-846f-34ead735ccdc" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
{
	body: {
		getHotelByHotelIdResponse: {
			hotelId: vars.hotel.hotel_id,
			hotelName: vars.hotel.hotel_name default "",
			rating: vars.hotel.rating default 0,
			address: {
				city: vars.hotel.ha_city default "",
				pinCode: vars.hotel.ha_code default "",
				state: vars.hotel.ha_state default ""
			},
			totalRooms: vars.hotel.total_rooms default 0,
			availableRooms: vars.hotel.available_rooms default 0,
			room: payload map ( payload01 , indexOfPayload01 ) -> {
				category: payload01.category default " ",
				price: payload01.price as String default ""
			},
			checkIn: vars.hotel.check_in default " " ,
			checkOut: vars.hotel.check_out default " ",
			contact: vars.hotel map ( hotel , indexOfHotel ) -> {
				"type": "phone",
				detail: hotel.hotel_phoneno default ""
			},
			contact: {
				"type": "email",
				"detail": vars.hotel.hotel_emailid default""
			}
		}
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="78da4033-c7ac-473d-a765-d0452f93b4f8" message="#[payload]"/>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="286d7bbf-7ad4-4e68-97d0-fb705cb11fe2" >
				<logger level="INFO" doc:name="Logger" doc:id="a3539854-7c7c-4107-86bb-9a022d3e2577" message="some error in getHotelByHotelIdFlow"/>
			</on-error-propagate>
		</error-handler>
	</flow>
	
	
	<flow name="getBookingDetailsByIdFlow" doc:id="376dbd2e-c602-4f35-b42c-7651d8e05661" >
		<db:select doc:name="selectHotelBookings" doc:id="ad490a9b-030b-4a98-93fd-eb33f7a700b9" config-ref="db-postgresqlConfig">
			<db:sql ><![CDATA[select h.hotel_name, hb.*
from hotel_bookings hb, hotels h 
where h.hotel_id = hb.hotel_id and booking_id = :bookingId]]></db:sql>
			<db:input-parameters ><![CDATA[#[output application/java
---
{
	bookingId: upper(payload.body.getBookingDetailsById.bookingId)
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="d5d0ac84-aa86-4f6a-97bd-a4d63e3ca276" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
{
	body: {
		bookingId: payload.booking_id default 0,
		hotelId: (payload.hotel_id default ""),
		hotelName: payload.hotel_name default "",
		roomCategory: payload.category default "",
		customerName: (payload.customer_name default ""),
		customerContactNo: payload.customer_phno default "",
		noOfRooms: payload.no_of_rooms_booked default 0,
		duration: payload.duration default "",
		totalAmount: payload.totalamt default 0
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="1eca18d1-4f23-4b3c-ad16-a39946a2f791" message="#[payload]"/>
	</flow>
	
	<flow name="listHotelsByLocationFlow" doc:id="4d220a68-0976-48ed-a6b1-8ad58ad9042f" >
		<db:select doc:name="selectHotelsAndAddress" doc:id="91a9b244-babe-4c53-ac6a-7fe083766d09" config-ref="db-postgresqlConfig" target="hotelsdetails">
			<db:sql><![CDATA[SELECT h.*,ha.city ha_city,ha.code ha_code,ha.state ha_state 
FROM hotel_address ha, hotels h 
WHERE ha.hotel_id = h.hotel_id
AND ha.city = :city]]></db:sql>
			<db:input-parameters ><![CDATA[#[output application/java
---
{
	city: upper(payload.body.listHotelsByLocation.city)
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="96ebf200-0d17-4460-b5e8-39ea05646d73" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="whereInParamAndValues" ><![CDATA[%dw 2.0
output application/json
---
{
	param: vars.hotelsdetails.hotel_id map ":arg$$" 
		reduce ( $$ ++ ", " ++ $),
	//param1: vars.hotelsdetails.hotel_id map ":arg$$" 
//		joinBy ", ",
	values: vars.hotelsdetails.hotel_id map {"arg$$" : $}
		reduce ((item, obj = {}) -> obj ++ item )
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<db:select doc:name="selectRoomCategory" doc:id="1c145297-d91b-4d64-bd96-57312582ec1c" config-ref="db-postgresqlConfig">
			<db:sql><![CDATA[#['SELECT * FROM hotel_room_category WHERE hotel_id IN ($(vars.whereInParamAndValues.param))']]]></db:sql>
			<db:input-parameters ><![CDATA[#[vars.whereInParamAndValues.values]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="4f58af79-2ae5-47ef-8008-f7c45cf66ef0" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
var fpayload = (pload,fstring) -> (pload filter($.hotel_id == fstring))
---
{
	body: {
		listHotelsByLocationResponse: vars.hotelsdetails map {
			hotel: {
				hotelId: $.hotel_id,
				hotelName: $.hotel_name default "",
				rating: $.rating default 0,
				address: {
					city: $.ha_city default "",
					pinCode: $.ha_code default "",
					state: $.ha_state default ""
				},
				totalRooms: $.total_rooms default 0,
				availableRooms: $.available_rooms default 0,
				room: fpayload(payload,$.hotel_id) map {
					category: $.category default "",
					price: $.price default ""
				},
				checkIn: $.check_in default "",
				checkOut: $.check_out default "",
				contact: [{
					"type": "email",
					detail: $.hotel_emailid default ""
				},{
					"type": "phone",
					detail: $.hotel_phoneno default ""
				}]
			}
		}
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="b38783c3-788c-4f08-8f47-be0199767bcb" message="#[payload]" />
	</flow>
	<flow name="bookHotelFlow" doc:id="fe5d38bd-6b68-433f-a654-481a23cb2d2a" >
		<ee:transform doc:name="Transform Message" doc:id="52e91fe5-b529-4d3b-9359-f2f6c3abf437">
			<ee:message>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="requestPayload" ><![CDATA[%dw 2.0
output application/json
---
{
	bookBotel: {
		hotelId: payload.body.bookHotel.hotelId,
		roomCategory: payload.body.bookHotel.roomCategory,
		customerName: payload.body.bookHotel.customerName,
		customerContactNo: payload.body.bookHotel.customerContactNo,
		noOfRooms: payload.body.bookHotel.noOfRooms,
		duration: payload.body.bookHotel.duration
	}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<db:select doc:name="selectRoomCategoryPrice" doc:id="c7de2617-a880-493d-845d-e3b466dc6999" config-ref="db-postgresqlConfig" target="hotelCategoryPrice">
			<db:sql ><![CDATA[SELECT hotel_id, category, price
FROM public.hotel_room_category
WHERE hotel_id=:hotel_id AND category=:category;
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	hotel_id: vars.requestPayload.bookBotel.hotelId,
	category: vars.requestPayload.bookBotel.roomCategory
}]]]></db:input-parameters>
		</db:select>
		<db:insert doc:name="insertHotelBooking" doc:id="37c03383-1ffd-4483-bf75-317a6ab6fdaf" config-ref="db-postgresqlConfig">
			<db:sql ><![CDATA[INSERT INTO public.hotel_bookings
(hotel_id, category, customer_name, customer_phno, no_of_rooms_booked, duration, totalamt)
VALUES(:hotel_id, :category, :customer_name, :customer_phno, :no_of_rooms_booked, :duration, :totalamt)

]]></db:sql>
			<db:input-parameters ><![CDATA[#[output application/java
var tAmt = (rooms,duration,price) -> (rooms * duration * price)
---
{
	hotel_id: payload.body.bookHotel.hotelId, 
	category: payload.body.bookHotel.roomCategory, 
	customer_name: payload.body.bookHotel.customerName, 
	customer_phno: payload.body.bookHotel.customerContactNo, 
	no_of_rooms_booked: payload.body.bookHotel.noOfRooms, 
	duration: payload.body.bookHotel.duration,
	totalamt: tAmt(vars.requestPayload.bookBotel.noOfRooms as Number default 0, 
				vars.requestPayload.bookBotel.duration as Number default 0,
				vars.hotelCategoryPrice.price[0] default 0)
}]]]></db:input-parameters>
		</db:insert>
		<db:select doc:name="selectHotelBookingByAll" doc:id="56b81dcb-f26d-45ca-ad1a-e4279a035d1d" config-ref="db-postgresqlConfig">
			<db:sql ><![CDATA[SELECT max(booking_id) booking_id
FROM public.hotel_bookings
WHERE 
hotel_id = :hotel_id and customer_name = :customer_name and 
customer_phno = :customer_phno and booking_date = :booking_date;
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	hotel_id: vars.requestPayload.bookBotel.hotelId,
	customer_name: vars.requestPayload.bookBotel.customerName,
	customer_phno: vars.requestPayload.bookBotel.customerContactNo,
	booking_date: now() as String {format: "yyyyMMdd"}
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="c2bbf467-932e-4f4f-8b85-a4fb7dbc6fb8" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
var tAmt = (rooms,duration,price) -> (rooms * duration * price)
---
{
	body: {
		bookHotelResponse: {
			bookingId: payload.booking_id default 0,
			hotelId: vars.requestPayload.bookBotel.hotelId,
			roomCategory: vars.requestPayload.bookBotel.roomCategory,
			customerName: vars.requestPayload.bookBotel.customerName,
			customerContactNo: vars.requestPayload.bookBotel.customerContactNo,
			noOfRooms: vars.requestPayload.bookBotel.noOfRooms,
			duration: vars.requestPayload.bookBotel.duration,
			totalAmount: tAmt(vars.requestPayload.bookBotel.noOfRooms as Number default 0, 
				vars.requestPayload.bookBotel.duration as Number default 0,
				vars.hotelCategoryPrice.price[0] default 0)
		}
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	
	
</mule>
